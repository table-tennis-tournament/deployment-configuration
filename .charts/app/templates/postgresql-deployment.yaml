{{- if .Values.postgresql.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}-postgresql
  labels:
    app: {{ template "app.name" . }}-postgresql
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/postgresql-secret.yaml") . | sha256sum }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "app.name" . }}-postgresql
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}-postgresql
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: postgresql-data
{{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "app.fullname" . }}-postgresql-data
{{- else }}
          emptyDir: {}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}-postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ template "app.name" . }}-postgresql
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ template "app.name" . }}-postgresql
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ template "app.name" . }}-postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-data
          resources:
  {{ toYaml .Values.postgresql.resources | indent 12 }}
  {{- with .Values.postgresql.nodeSelector }}
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.postgresql.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.postgresql.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}

{{- end }}
